Comunicação Serial
==================

A principal caracteristica da comunicação serial é o processo de enviar dados um bit de cada vez, de forma sequencial, atravez de um canal de comunicação ou barramento. Diferente da comunicação paralela, em que todos os bits de cada simbolo são enviados juntos. 

Com a finalidade de possibilitar a conversão, transmissão e recepção de dados de forma serial, sendo estes originalmente dispostos de maneira paralela, surge o formato **UART**, acrônimo de Universal Asynchrounous Receiver/Transmiter ou Receptor/Transmissor Universal Assíncrono.

O termo "Universal" refere-se a caracteristica do formato dos dados e velocidade serem configuráveis, enquanto "Assincrono" diz respeito a forma de comunicação em série ocorre, em que as interfaces dos pontos de extremidade que comunicam não estão continuamente sincronizada por um sinal de clock comum.

.. Note::
    Mais detalhes sobre a comunicação UART podem ser vistos em `Introduction to UART Communication - microcontrollerslab.com`_.

.. _Introduction to UART Communication - microcontrollerslab.com: https://microcontrollerslab.com/uart-communication-working-applications/

No caso do Overo, temos três sistemas de Comunicação **UART**  implementados por hardware à nossa disposição. O que faz desnecessário qualquer implementação manual através de software utilizando GPIO.

Agora vamos entender como funciona o protocolo de comunicação UART. Essa comunicação funciona através da conexão do transmissor (**TX**) de um dispositivo com o receptor (**RX**) de outro dispositivo, no caso, apenas o **TX** realiza alterações no nível de tensão da linha, sendo assim, a comunicação é, para cada conexão, uma via de mão única. Logo, para realizar uma comunicação de mão dupla iremos utilizar duas conexões, uma será a ligação de **RX** do dispositivo 1 com o **TX** do dispositivo 2 e a outra ligação será o oposto, **RX** do dispositivo 2 com **TX** do dispositivo 1, similar a imagem abaixo.

.. figure:: /img/Aerial/UART_bus.png
    :align: center

Podemos analisar a situação da comunicação a nível de bit. Por exemplo, para uma comunicação UART do tipo "8N1" (8 bits de dados, 0 bits de paridade e 1 bit de parada) teremos o canal em estado idle, que significa "não operando", representado pelo nível de tensão estático em alto. Logo, quando pretende-se iniciar a comunicação é enviado um pulso de nível baixo e em seguida são enviados os oito bits de dados que será acompanhado de um bits de parada em estado alto.

É importante destacar que a função do bit de parada é realizar uma pausa na transmissão para algum processamento interno dos dispositivos, não é necessário, portanto, nenhum tempo adicional entre os dados transmitidos.

Como essa é uma comunicação assíncrona, é essencial que a velocidade da comunicação seja pré-determinada. Essa velocidade é geralmente dada em Baudrate e, em nosso caso, 30 será essencialmente o tempo de duração de cada bit.

.. Note::
    O termo "Baud rate" é utilizado como medida de velocidade de transmissão de dados entre dispositivos. Um baud é uma medida de velocidade de sinalização e representa o número de mudanças na linha de transmissão (seja em frequência, amplitude, fase etc...) ou eventos por segundo.

A figura 3.114 é um esquemático que ilustra o que foi explicado nos parágrafos anteriores, na ilustração a velocidade de comunicação é de 10.000.000 baud/s.

.. figure:: /img/Aerial/UART_8N1.png
    :align: center
    :width: 500px


Particularidades da Gumstix Overo
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

O computador embarcado Overo conectado a uma placa de expansão tobi possui dois desses UARTs disponíveis, por padrão, para nosso uso nos pinos apresentados na figura 3.5. Como pode ser visto a UART1 está conectada aos pinos 10 e 9 e a UART3 está conectada aos pinos 22 e 21. Ainda é importante dizer que a porta serial UART3 é o mesmo pino utilizado pelo "USB console", ou seja, é o mesmo pino que usamos para controlar a gumstix pelo computador, ou seja, em configuração padrão as mensagens do sistema e as mensagens para o sistema são enviadas por esta porta.

Caso as duas portas seriais já mencionadas não sejam suficientes para a aplicação existe, também, a porta serial UART2 que não está, por padrão, disponível em um dos pinos para nossa utilização. Na verdade ela foi reservada para comunicar-se com o bluetooth, contudo apenas versões posteriores ao nosso computador embarcado possuem bluetooth, portanto podemos, caso necessário, exportar a UART2 para os pinos e utiliza-los.

Para utilizar esta porta serial é necessário modificar o u-boot de modo a multiplexar sua função ao GPIO 146/147 que, como mostrado na figura 3.5, estão ligados aos pinos 29 e 27. Portanto para faze-lo é necessário modificar o arquivo "overo.h" removendo as linhas de comando referentes ao modo de GPIO dos pinos 146 e 147, remover as linhas que desabilitam a UART2 e adicionar as linhas que habilitam a comunicação serial pela UART2.

Para entender detalhadamente o que precisa ser feito e quais registradores serão alterados deve-se consultar a seção de comunicação serial de [5]. Contudo existe um tópico no fórum de discussões da gumstix5 que indica diretamente quais alterações devem ser feitos no "uboot" para que se possa utilizar a UART2, apesar disso a solução apresentada nesse fórum não foi testada durante este trabalho.


Referências
-----------

* PITA, H. C. Desenvolvimento de sistema de comunicação multiplataforma para veículos aéreos de asa fixa. Faculdade de Tecnologia, Universidade de Brasília, 2018.

.. https://pt.qwe.wiki/wiki/Asynchronous_serial_communication
.. https://en.wikipedia.org/wiki/Universal_asynchronous_receiver-transmitter
.. https://en.wikipedia.org/wiki/Asynchronous_serial_communication
.. http://newtoncbraga.com.br/index.php/telecom-artigos/1709-#:~:text=UART%20%C3%A9%20o%20acr%C3%B4nimo%20de,conforme%20mostra%20a%20figura%201.